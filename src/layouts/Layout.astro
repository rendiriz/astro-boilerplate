---
import { site } from '@/lib/site';
import Nav from '@/islands/Nav';

const { ...customMeta } = Astro.props;

const meta = {
  mainTitle: 'Astro Boilerplate',
  title: null,
  description: 'Astro Boilerplate Description',
  image: 'https://placehold.co/1820x904',
  date: null,
  route: '',
  ...customMeta,
};

let metaTitle = meta.mainTitle;
if (meta.title) {
  metaTitle = `${meta.title} â€” ${meta.mainTitle}`;
}

const pathname = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<link rel="icon" type="image/svg+xml" href={site.favicon} />
    <link rel="canonical" href={`${site.url}${meta.route}`} />
		<title>{metaTitle}</title>
    <meta name="application-name" content={site.name} />
    <meta name="description" content={meta.description} />
    <meta name="robots" content="follow, index" />
    <meta property="og:url" content={`${site.url}${meta.route}`} />
    <meta property="og:type" content={site.type} />
    <meta property="og:site_name" content={site.name} />
    <meta property="og:description" content={meta.description} />
    <meta property="og:title" content={metaTitle} />
    <meta property="og:image" content={meta.image} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content={site.twitter} />
    <meta name="twitter:title" content={metaTitle} />
    <meta name="twitter:description" content={meta.description} />
    <meta name="twitter:image" content={meta.image} />
    {meta.date && (
      <meta property="article:published_time" content={meta.date} />
    )}
	</head>
	<body>
    <Nav client:load pathname={pathname} />
    <main>
      <slot />
    </main>
    <footer>
      <div class="mx-auto max-w-7xl px-4">
        Footer
      </div>
    </footer>
	</body>
</html>

<style>
  body {
    @apply bg-white dark:bg-gray-900;
  }
</style>

<script is:inline src="/theme.js"></script>
